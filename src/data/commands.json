{
  "request": {
    "hidden": false,
    "cmd_desc": "Add topic(s) to the topic queue.",
    "params": [
      {
        "name": "topic",
        "optional": false,
        "type": "positional",
        "data_type": "string",
        "description": "The topic to add in english.",
        "notes": "Please keep topic under 50 characters."
      }
    ],
    "usage": [
      "`.request Michael Jackson`",
      "`.request The Shining`"
    ]
  },

  "topics": {
    "hidden": false,
    "cmd_desc": "Lists all topics in queue.",
    "params": null,
    "usage": ["`.topics`"]
  },
  
  "rm": {
    "hidden": false,
    "cmd_desc": "Remove a topic from the queue.",
    "params": [
      {
        "name": "topics",
        "optional": true,
        "type": "positional",
        "data_type": "list of numbers",
        "description": "Which topics to remove from queue by number in the queue.",
        "notes": "This can be one or multiple topics."
      },
      {
        "name": "topic",
        "optional": true,
        "type": "flag",
        "data_type": "string",
        "description": "The topic to remove.",
        "notes": "Please keep this under 50 characters."
      },
      {
        "name": "span",
        "optional": true,
        "type": "flag",
        "data_type": "two numbers",
        "description": "A range of topics to remove from the queue.",
        "notes": null
      }
    ],
    "usage": [
      "`.rm 1`",
      "`.rm 1 4 2`",
      "`.rm range: 1 4`",
      "`.rm topic: Michael Jackson`"
    ]
  },

  "thought": {
    "hidden": true,
    "cmd_desc": "Send a thought on a topic.",
    "params": [
      {
        "name": "topic",
        "optional": true,
        "type": "positional",
        "data_type": "string",
        "description": "The topic to send a thought on.",
        "notes": "Please keep this under 50 characters."
      }
    ],
    "usage": [
      "`.thought`",
      "`.thought Einstein's Theory of Relativity`"
    ]
  },

  "admin": {
    "hidden": true,
    "cmd_desc": "Displays a message which gives the status of the bot.",
    "params": null,
    "usage": ["`.admin`"]
  },

  "admin-startl": {
    "hidden": true,
    "cmd_desc": "Starts the daily message loop.",
    "params": null,
    "usage": ["`.admin startl rss`", "`.admin startl status`"]
  },

  "admin-stopl": {
    "hidden": true,
    "cmd_desc": "Starts a task loop.",
    "params": [
      {
        "name": "task_name",
        "optional": false,
        "type": "positional",
        "data_type": "str",
        "description": "The task to start or stop.",
        "notes": "Must be one of `rss` or `status`."
      }
    ],
    "usage": ["`.admin stopl rss`", "`.admin stopl status`"]
  },

  "admin-statusl": {
    "hidden": true,
    "cmd_desc": "Displays a message which gives the status of all task loops.",
    "params": null,
    "usage": ["`.admin statusl`"]
  },

  "admin-kill": {
    "hidden": true,
    "cmd_desc": "Completely shuts down the bot. Must react to the bot message with <:L_:1136812895859134555> within 10 seconds.",
    "params": null,
    "usage": ["`.admin kill`"]
  },

  "admin-lock": {
    "hidden": true,
    "cmd_desc": "Locks all commands.",
    "params": null,
    "usage": ["`.admin lock`"]
  },

  "admin-unlock": {
    "hidden": true,
    "cmd_desc": "Unlocks all commands.",
    "params": null,
    "usage": ["`.admin unlock`"]
  },

  "admin-minstars": {
    "hidden": true,
    "cmd_desc": "Change the minimum number of stars for a starboard message.",
    "params": [
      {
        "name": "stars",
        "optional": false,
        "type": "positional",
        "data_type": "int",
        "description": "The minimum number of stars",
        "notes": "Must be a valid integer, defaults to 3."
      }
    ],
    "usage": ["`.admin minstars 3`"]
  },
  
  "admin-starboard": {
    "hidden": true,
    "cmd_desc": "Change the starbord channel.",
    "params": [
      {
        "name": "channel",
        "optional": false,
        "type": "positional",
        "data_type": "text_channel",
        "description": "The channel to become the starboard.",
        "notes": "Must be a valid channel, defaults to the dump channel."
      }
    ],
    "usage": ["`.admin starboard #starboard-channel`"]
  },

  "admin-getrss": {
    "hidden": true,
    "cmd_desc": "Updates the RSS channel from some time ago.",
    "params": [
      {
        "name": "days",
        "optional": true,
        "type": "keyword",
        "data_type": "int",
        "description": "How many days ago to pull posts from",
        "notes": "Defaults to 0"
      },
      {
        "name": "hours",
        "optional": true,
        "type": "keyword",
        "data_type": "int",
        "description": "How many hours ago to pull posts from",
        "notes": "Defaults to 12"
      },
      {
        "name": "minutes",
        "optional": true,
        "type": "keyword",
        "data_type": "int",
        "description": "How many hours ago to pull posts from",
        "notes": "Defaults to 0"
      }
    ],
    "usage": ["`.admin getrss`", "`.admin getrss days=1 minutes=3`"]
  },

  "admin-setrss": {
    "hidden": true,
    "cmd_desc": "Sets a new channel for the RSS feed to dump into",
    "params": [
      {
        "name": "channel",
        "optional": false,
        "type": "positional",
        "data_type": "text_channel",
        "description": "The channel to set RSS feed dumps into",
        "notes": "This must be a valid text channel."
      }
    ],
    "usage": ["`.admin setrss #rss-channel`"]
  },

  "admin-addfeed": {
    "hidden": true,
    "cmd_desc": "Adds a URL to parse when updating the RSS feed.",
    "params": [
      {
        "name": "url",
        "optional": false,
        "type": "positional",
        "data_type": "str",
        "description": "The URL to add to the list of feeds to update",
        "notes": "This must be a valid RSS url."
      }
    ],
    "usage": ["`.admin addfeed https://mywebsite.com/rss/blog`"]
  }
}
